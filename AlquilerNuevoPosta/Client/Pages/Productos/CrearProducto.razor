@page "/Registrar_Producto"
@using Alquiler.BD.Data.Entidades
@using AlquilerNuevoPosta.Client.Servicios
@inject IHttpService http
@inject NavigationManager navigationManager


<html>

    <head>

        <link href='https://fonts.googleapis.com/css?family=Bangers' rel="stylesheet" />
    </head>

<head>


    <title>alquiler</title>

</head>

<body>


    <header>

        <label for="btn-menu" class=icon-menu>
            <div class="toggle-btn">

                <span>&#9776</span>

            </div>
        </label>

        <input type="checkbox" id="btn-menu">
        <div class="cont-menu">
            <nav>
                <a href="/Logiado">Pagina principal</a>
                <a href="/Registrar_Productos">Registrar productos</a>
                <a href="/Productos">Mis productos</a>
                <a href="/ProductosPagados">Productos pagados</a>
            </nav>

            <label for="btn-menu" class=icon-menu>
                <div class="salir">

                    <span>&#x21d0;</span>

                </div>
            </label>
        </div>

        <section id="banner">
            <div class="palabra">
                <h1>¡Alquiler por 2 pesos!</h1>
            </div>
            <nav>
                <a href="" class="nav-link">Categoria/Rubro</a>
                <a href="" class="nav-link">Precio</a>
                <a href="" class="nav-link">Ubicacion</a>
            </nav>

            <div class="lupa">
                <span>&#127859</span>
            </div>
            <div class="caja-buscador">
            </div>
            <input class="buscador" type="text" name="" placeholder="Buscar producto">


        </section>



    </header>


</body>


</html>

<Form_Producto producto="producto" 
                
    
    onCancel="Cancelar" onValidSubmit="Grabar" />


@code {

        private ProductoPublicado producto = new ProductoPublicado();
        //private Estado estado = new Estado();
      

    private async void Grabar()


    {

          List<Estado> estados;
      
        int Estadoid = 0;
       

        var httpRespuesta = await http.Post<ProductoPublicado>("api/Productos", producto);
        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/Productos");

        // var httpRespuestaEstado = await http.Post<Estado>("api/Estado", estado);
        //if (httpRespuestaEstado.Error)
        //{
        //    var body = httpRespuestaEstado.HttpResponseMessage;
        //}

        //var RespuestaEstado= await http.Get<List<Estado>>("api/Estado");
        //if (!httpRespuestaEstado.Error)
        //{
        //    estados = RespuestaEstado.Respuesta;

        //    foreach (var item in estados)
        //    {
        //        if (item.Estados == estado.Estados )
        //        {
        //            Estadoid = item.Id;
        //        }
        //    }
        //}

        //producto.EstadoId = Estadoid;
   }

    private void Cancelar()
    { }

}
