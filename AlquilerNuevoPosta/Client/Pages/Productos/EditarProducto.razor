@page "/Editar/{Id:int}"
@using Alquiler.BD.Data.Entidades
@using AlquilerNuevoPosta.Client.Servicios
@inject IHttpService http
@inject NavigationManager navigationManager


<html lang="en">

<head>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <link href='https://fonts.googleapis.com/css?family=Bangers' rel="stylesheet" />
</head>

    <header>

        <label for="btn-menu" class=icon-menu>
            <div class="toggle-btn">

                <span>&#9776</span>

            </div>
        </label>

        <input type="checkbox" id="btn-menu">
        <div class="cont-menu">
            <nav>
                <a href="/Logiado">Pagina principal</a>
                <a href="/Registrar_Producto">Registrar productos</a>
                <a href="/Productos">Mis productos</a>
                 <a href="/ProductosPagados">Productos pagados</a>
            </nav>

            <label for="btn-menu" class=icon-menu>
                <div class="salir">

                    <span>&#x21d0;</span>

                </div>
            </label>
        </div>

        <section id="banner">
            <div class="palabra">
                <h1>¡Alquiler por 2 pesos!</h1>
            </div>
            <nav>
                <a href="" class="nav-link">Categoria/Rubro</a>
                <a href="" class="nav-link">Precio</a>
                <a href="" class="nav-link">Ubicacion</a>
            </nav>

            <div class="lupa">
                <span>&#127859</span>
            </div>
            <div class="caja-buscador">
            </div>
            <input class="buscador" type="text" name="" placeholder="Buscar producto">


        </section>

        <section id="textos">

            <div>
                <h1>Editar producto</h1>
            </div>

            </section
            </header>
            
</html>









    <Form_Producto producto="producto" onCancel="Cancelar" onValidSubmit="Grabar" />

@code {
    private ProductoPublicado producto = new ProductoPublicado();
    [Parameter] public int Id { get; set; }

  

        protected async override Task OnInitializedAsync()
    {
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.Get<ProductoPublicado>($"api/Productos/{Id}");
        if(respuesta.Error)
        {
            var body = respuesta.HttpResponseMessage;
        }
        else
        {
            producto = respuesta.Respuesta;
        }
    }
    private async void Grabar()

    {

        var respuesta = await http.Put<ProductoPublicado>($"api/Productos/{Id}", producto);
        if (respuesta.Error)
        {
            var body = respuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/Productos");

    }


    private void Cancelar()
    {
    }
}
