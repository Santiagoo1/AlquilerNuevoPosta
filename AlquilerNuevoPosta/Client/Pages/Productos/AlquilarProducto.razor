@page "/Alquilar/{Id:int}"
@using Alquiler.BD.Data.Entidades
@using AlquilerNuevoPosta.Client.Servicios
@inject IHttpService http
@inject NavigationManager navigationManager



<html>

    <div class="producto">
    <div class= "foto">
        <img class="imagenproducto" src="@producto.foto" />
    </div>

    <div class="card">

                <div class=" card-body">
            <h5 class="card-title mb-3">
                <b>@producto.NombreProducto</b>
            </h5>    
                
            <p class="card-text">
                <b>Precio:$@producto.PrecioProducto.ToString()</b>
                <br />
               <b> Detalle:@producto.DetallesProducto</b>
            </p>
            <div class="card-footer">
                  <div class="botonalquiler">
                <button type="submit" @onclick="() => PutAlquilado(producto)" class="btn btn-primary" >Alquilar</button>
                 </div>

            </div>
        </div>
    </div>
    </div>




 </html>

@code {
    [Parameter] public int Id { get; set; }
    private ProductoPublicado producto = new ProductoPublicado();

    List<ProductoPublicado> productos;

    protected override async Task OnParametersSetAsync()
    {

        var respuesta = await http.Get<ProductoPublicado>($"api/Productos/{Id}");
        if(respuesta.Error)
        {
            var body = respuesta.HttpResponseMessage;
        }
        else
        {
            producto = respuesta.Respuesta;
        }
    }

    private async void Grabar()


    {

        List<Estado> estados;

        int Estadoid = 0;


        var respuesta = await http.Post<ProductoPublicado>($"api/ProductoAlquilado",producto);
        if(respuesta.Error)
        {
            var body = respuesta.HttpResponseMessage;
        }     

    }

    public async void  PutAlquilado(ProductoPublicado productoactual)
    {
        productoactual.Alquilado = true;

        var respuesta = await http.Put<ProductoPublicado>($"api/Productos/{productoactual.Id}", productoactual);
        if (respuesta.Error)
        {
            var body = respuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/Productos2");

    }

}
