@using Alquiler.BD.Data.Entidades
@using AlquilerNuevoPosta.Client.Servicios
@inject IHttpService http
@page "/Productos"





<table>
    <tr>
        <th>Nombre</th>
        <td></td>
                <td></td>
        <td></td>
        <td></td>
        <th>  Precio</th>
        <td></td>
                <td></td>

        <th>  Detalle</th>
        <td></td>
                <td></td>
        <td></td>
        <td></td>
        <th>  Foto</th>
        <td></td>
        <td></td>
        <td></td>
        <th>  Estado</th>
    </tr>
    @if (productos==null && estados== null)
    {
        <tr>Cargando......</tr>
    }
    else if (productos.Count ==0  && estados.Count==0)
    {
        <tr>No exixten datos</tr>
    }
    else
    {
         @foreach (var item in productos )
        {
            <tr>

                <td>@item.NombreProducto</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td>@item.PrecioProducto</td>
                <td></td>
                <td></td>
                <td>@item.DetallesProducto</td>
                <td></td>
                <td></td>
                <td></td>
                <td>@item.Fotos</td>
                <td></td>
                <td></td>
                <td></td>    

            </tr>
        }   


    }

</table>
    

@code {
    List<Producto> productos;
    List<Estado> estados; 

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()

    {

        var respuesta = await http.Get<List<Producto>>("api/Productos");
        
        if (!respuesta.Error)
        {
            productos = respuesta.Respuesta;
        }

    }




}
