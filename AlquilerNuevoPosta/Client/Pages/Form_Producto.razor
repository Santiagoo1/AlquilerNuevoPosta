@using Alquiler.BD.Data.Entidades
@inject NavigationManager navigatioManager
@using AlquilerNuevoPosta.Client.Servicios
<EditForm Model="producto" OnValidSubmit="onValidSubmit">
    <DataAnnotationsValidator />



        <label>Nombre</label>
        <div>

            <InputText class="form-control" @bind-Value="@producto.NombreProducto" />
            <ValidationMessage For="@(()=> producto.NombreProducto)" />
        </div>

        <label>Precio</label>
        <div>

            <InputNumber class="form-control" @bind-Value="@producto.PrecioProducto" />
            <ValidationMessage For="@(()=> producto.PrecioProducto)" />
        </div>

        <label>Detalle</label>
        <div>

            <InputText class="form-control" @bind-Value="@producto.DetallesProducto" />
            <ValidationMessage For="@(()=> producto.DetallesProducto)" />
        </div>

      @*<label>Foto</label>
        <div>

           <InputText class="form-control" @bind-Value="@foto.Fotos" />
            <ValidationMessage For="@(()=> foto.Fotos)" />
        </div>*@

       <label>Estado</label>
        <div>

            <InputNumber class= "form-select" @bind-Value ="@producto.EstadoId" /> 
               <ValidationMessage For="@(()=> producto.EstadoId)" />
                
                
            
        

        </div>

   

   <button type="submit" class="btn btn-primary" >Aceptar</button>
   <button  class="btn btn-secondary" @onclick="onCancel">Cancelar</button>

</EditForm>

@code {

    [Parameter] public Producto producto { get; set; }
    //[Parameter] public Foto foto { get; set; }
   // [Parameter] public Estado estado { get; set; }
    [Parameter] public EventCallback onValidSubmit { get; set; 
}
    [Parameter] public EventCallback onCancel { get; set; }
}
