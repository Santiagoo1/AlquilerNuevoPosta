@page "/Logiado"
@page "/{categoriaurl}"
@using Alquiler.BD.Data.Entidades
@using AlquilerNuevoPosta.Client.Servicios
@inject IHttpService http
@*@inject HttpClient*@
@using System.Text.Json







<html lang="en">

<head>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <link href='https://fonts.googleapis.com/css?family=Bangers' rel="stylesheet" />
   
</head>

    <style>

    html{

    box-sizing: border-box;

    }

    body {

    font-family: Helvetica;

    margin: 0;

    }
       header{display: flex;
    position: fixed;
    top: -3px;
    left: 0px;
    width: 5000px;
    background-color: RGB(254, 189, 89);
    height: 120px;
    padding: 0;}

    #banner h1{
    color:white ;
    position: fixed;
    top: 25px;
    left: 250px;
    font-size: 50px;
    font-family: Bangers, cursive;
    text-shadow: 5px 1.5px 10px  #494949 ;

    }
    .nav-link{color:black}


    .nav-link:hover{color:#868686}

    .lupa{  

    position: fixed;
    left: 1320px;
    top: 24px;
    font-size: 23px;
    color: black;
}
.caja-buscador{   
    position: fixed;
    border-radius: 30px;
    background-color: rgb(248, 248, 248);
    top: 21px;
    left: 842px;
    height: 40px;
    width: 450px;
    }




    header .toggle-btn span {

    position: absolute;

    font-size: 4rem;
    cursor: pointer;


}
#btn-menu   {

    display: none;

}



.cont-menu  {

    width: 100%;
    max-width: 250px;
    background: rgb(36, 34, 34);
    height: 100vh;
    position: relative;
    transition: all 500ms ease;
    visibility: hidden;
    transform: translateX(-100%);
        background-image: linear-gradient(180deg, #198754 0%, #084298 70%);



}
#btn-menu:checked ~ .cont-menu  {
    visibility: visible;
    transform: translateX(0%);
    position: fixed;
}


.cont-menu nav  {


    transform: translateY(15%);


}

.cont-menu a    {

    padding: 20px;


}

.cont-menu nav a {

    display: block;
    text-decoration: none;
    padding: 30px;
    border-left: 5px solid transparent;
    transition: all 40ms ease;
    color: white;
    transition: all 2000ms transparent;
}

.cont-menu nav a:hover  {

    border-left: 5px solid #c7c7c7;
    background: #292929;
}


.cont-menu label    {


    position: absolute;
    right: 5px;
    top: 7px;
    color:#c7c7c7;
    font-size: 35px;
    cursor: pointer;


}
#textos h1{
       position: absolute;
    font-size: 36px;
    top: 113%;
    left: 17%;
    font-family: Helvetica;

}
#banner nav{
       display: flex;
    position: fixed;
    left: 891px;
    top: 59px;
    text-decoration: none;
}
.buscador{
    position: fixed;
    left: 847px;
    top: 21px;
    border: none;
    background: none;
    outline: none;
    float: left;
    line-height: 40px;
    padding: 0px 20px;
    color: rgb(2, 2, 2);

}

   
    a, .btn-link {
        color: #ffffff;
    }

    a {
        text-decoration: none;
    }

        .boton-registro label{
        color: #0071c1;
        color: white;
        background-color: rgb(84, 84, 245);
        color: white;
        font-weight: bold;
        border-radius: 10px;
        padding: 10px;
        position: absolute;
        top: 34px;
        left: 1430px;
        border-color: rgb(131, 129, 129);
        border: 2px solid rgb(131, 129, 129);
        cursor: pointer;
        width: 128px;

    }

#banner nav:hover   {

        color: dimgrey;

}
        .buscados{       
        position: fixed;  
        top: 220px;
        left: 350px;
        }

        .alquilados{
        position: fixed;  
        top: 600px;
        left: 350px;
        }

         .imagen1 {
            position:fixed;
            left: 300px;
            top: 280px;
            height: 200px;
            width: 250px;   
            transition: 1s;
        }
        .imagen1:hover {

           transform: scale(1.3)       
        }
        .imagen2{
            position:fixed;
            left: 500px;
            top: 280px;
            height: 200px;
            width: 250px;    
            transition: 1s;
        }
        .imagen2:hover {

           transform: scale(1.3)       
        }       
        .imagen3{
            position:fixed;
            left: 700px;
            top: 280px;
            height: 200px;
            width: 250px;   
            transition: 1s;

        }
        .imagen3:hover {

           transform: scale(1.3)       
        }     
        .imagen4{
            position:fixed;
            left: 1000px;
            top: 280px;
            height: 200px;
            width: 250px;  
            transition: 1s;
        }
        .imagen4:hover {

           transform: scale(1.3)       
        }     
        .imagen5{
            position:fixed;
            left: 300px;
            top: 700px;
            height: 200px;
            width: 250px;   
            transition: 1s;
        }
        .imagen5:hover {

           transform: scale(1.3)       
        }     
        .imagen6{
            position:fixed;
            left: 600px;
            top: 700px;
            height: 200px;
            width: 250px; 
            transition: 1s;

        }
        .imagen6:hover {

           transform: scale(1.3)       
        }    


        .imagen7{
            position:fixed;
            left: 900px;
            top: 700px;
            height: 180px;
            width: 250px; 
            transition: 1s;

        }
        .imagen7:hover {

           transform: scale(1.3)       
        }    

         .nav-link{

             padding: 20px;
             text-decoration:none;

         }


    </style>


<body>


    <header>

     <label for="btn-menu" class=icon-menu>
        <div class="toggle-btn">

            <span>&#9776</span>

        </div>
     </label>

        <input type="checkbox" id="btn-menu">
        <div class="cont-menu">
            <nav>
                <a href="/Logiado">Pagina principal</a>
                <a href="/Registrar_Producto">Registrar productos</a>
             <a href="/Productos">Mis productos</a>


            </nav>
            <label for="btn-menu" class=icon-menu>
                <div class="salir"> 
                <span>&#x21d0;</span>
                </div>
                </label>
         </div>
          <section id = "banner">
            <div class="palabra" >
                <h1>¡Alquiler por 2 pesos!</h1>
            </div>
            <nav>
                <a href="@producto.CategoriaId" class="nav-link">Electrodomestico</a>
                <a href="" class="nav-link">Precio</a>
                <a href="" class="nav-link">Ubicacion</a>
            </nav>

            <div class="lupa">
            <span>&#127859</span>
                <button type="button" class="btn btn-primary mr-sm-2 mb-2"
                @onclick="Buscar">Buscar</button>

                <AlquilerNuevoPosta.Client.Pages.Productos.Paginacion PaginasTotales="PaginasTotales" PaginaActual="PaginaActual" PaginaSeleccionada="PaginaSeleccionada">



                </AlquilerNuevoPosta.Client.Pages.Productos.Paginacion>
                
            </div>
            <div class="caja-buscador">

            </div>
            </section>
            <section id="textos">


            </section>
       @* <input class="buscador" type="text" @bind="NombrePersonaBuscador" placeholder="Buscar producto">*@

            <br />
          
        <div class="boton-registro ">

            <label for="submit">
                <a href="/">Cerrar Sesion</a>
            </label>
        </div>

    <div class=" buscados">

        <p> <b>Ultimos Productos agregados</b></p>


    </div>

  

    



</header>

 
    @if (productos == null)
    {
        <tr>Cargando......</tr>
    }
    else if (productos.Count == 0)
    {
        <tr>No existen datos</tr>
    }
    else
    {
        @foreach (var item in productos)
        {
            <div class="cardmove">
                <div class="card">
                    <div class="producto">
                        <div class="foto">
                            <img class="imagenproducto" src="@item.foto" />
                        </div>
                        <div class=" card-body">
                            <h5 class="card-title mb-3">
                                <b>@item.NombreProducto</b>
                            </h5>

                            <p class="card-text">
                                <b>Precio:$@item.PrecioProducto.ToString()</b>
                                <br />
                                <b> Detalle:@item.DetallesProducto</b>
                                <br />
                                <b> Estado:@item.Estado.Estados</b>

                            </p>
                            <div class="card-footer">
                                <div class="botonalquiler">
                                    <a class="btn btn-primary"
                                       href="Alquilar/@item.Id">
                                        Ir a alquiler

                                    </a>

                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }

</body>








    </html> 









@code {



    public Categoria categoria = new Categoria();

    public ProductoPublicado producto = new ProductoPublicado();

    [Parameter]
    public string CategoriaUrl { get; set; }

    protected override async Task OnParametersSetAsync()
    {

        var respuesta = await http.GetProductos<List<ProductoPublicado>>($"api/Productos/{CategoriaUrl}");

    }



    List<ProductoPublicado> productos;

    List<Estado> Estados;


    private int PaginaActual = 1;
    private int PaginasTotales;
    private string NombreProductoBuscador = string.Empty;





    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        await Leer();

    }

    private async Task Leer()

    {

        var respuesta = await http.Get<List<ProductoPublicado>>("api/Productos");

        if (!respuesta.Error)
        {
            productos = respuesta.Respuesta;
        }

    }

    private void PaginaSeleccionada()
    {
        
    }

    private async Task Buscar()
    {
        PaginaActual = 1;
        //await CargarProducto
    }




    async Task CargarProducto()
    {
        //var httpResponse = await http.GetAsync("api/Productos");
        //if (httpResponse.IsSuccessStatusCode)
        //{
        //    PaginasTotales = int.Parse(httpResponse.Headers.GetValues("totalPaginas").FirstOrDefault());

        //    var responseString = await httpResponse.Content.ReadAsStringAsync();
        //    productos = JsonSerializer.Deserialize<List<ProductoPublicado>>(responseString,
        //        new JsonSerializerOptions() {PropertyNameCaseInsensitive = true });
        //}else
        //{
        //    Console.WriteLine("error");
        //}

    }

   
    
}
